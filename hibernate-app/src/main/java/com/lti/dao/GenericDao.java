package com.lti.dao;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.Persistence;
import com.lti.entity.Address;
import com.lti.entity.Employee;
import com.lti.entity.User;

public class GenericDao {

	public <T> T save(Object obj)
	{
		EntityManagerFactory emf = null;
		EntityManager em = null;
		try
		{
	    emf = Persistence.createEntityManagerFactory("hibernate-app");
		em = emf.createEntityManager();
		
		EntityTransaction tx = em.getTransaction();
		tx.begin();
		// merge returns the object updated with the primary key.
		// this helps when we have entitites with autogenerated primary key.
		T obj1 = (T) em.merge(obj);
		tx.commit();
		return obj1;
		}
		finally
		{
		em.close();
		emf.close();
		}
	}
	
	//public Object fetchById(Class clazz, Object id)
	public <T> T fetchById(Class<T> clazz, Object id)
	{
		EntityManagerFactory emf = null;
		EntityManager em = null;
		try
		{
		emf = Persistence.createEntityManagerFactory("hibernate-app");
		
		em = emf.createEntityManager();
		//Object obj = em.find(clazz, id);
		T obj = em.find(clazz, id);
		return obj; 
		}
		finally
		{
		em.close();
		emf.close();
		}
	}
	
}
